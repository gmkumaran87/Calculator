{"ast":null,"code":"import _objectSpread from\"E:/GIT/Projects/Calculator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/GIT/Projects/Calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./App.css\";import Buttons from\"./Buttons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var initialState={prevNumber:\"\",currNumber:\"0\",operations:\"\",isComplete:false,expression:\"\"};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setstate=_useState2[1];var numbers=[{id:\"seven\",value:7},{id:\"eight\",value:8},{id:\"nine\",value:9},{id:\"delete\",value:\"DEL\"},{id:\"four\",value:4},{id:\"five\",value:5},{id:\"six\",value:6},{id:\"add\",value:\"+\"},{id:\"one\",value:1},{id:\"two\",value:2},{id:\"three\",value:3},{id:\"subtract\",value:\"-\"},{id:\"zero\",value:0},{id:\"decimal\",value:\".\"},{id:\"divide\",value:\"/\"},{id:\"multiply\",value:\"*\"},{id:\"equals\",value:\"=\"},{id:\"clear\",value:\"AC\"}];var handleClick=function handleClick(e){var btnValue=e.target.dataset.value;var newNumber=\"\";if(state.isComplete){setstate(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currNumber:\"\"});});}if(!isNaN(Number(btnValue))){setstate(function(prevState){var newExp=\"\";// Checking the Last operations is EQUALS\nif(lastOperandEquals(prevState)){newExp=\"\";}else{newExp=prevState.expression;}if(prevState.currNumber.length===1&&prevState.currNumber[0]===\"0\"){newNumber=btnValue;}else{newNumber=prevState.currNumber+btnValue;}return _objectSpread(_objectSpread({},prevState),{},{currNumber:newNumber,prevNumber:btnValue,isComplete:false,expression:newExp});});}if(btnValue===\".\"&&!state.currNumber.split(\"\").includes(btnValue)){setstate(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currNumber:prevState.currNumber+btnValue});});}if(btnValue===\"AC\"){setstate(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currNumber:\"0\",prevNumber:\"\",isComplete:true,expression:\"\"});});}// OPERATIONS\nif([\"+\",\"-\",\"*\",\"/\"].includes(btnValue)){setstate(function(prev){var newExp=\"\";var operands=\"\";if(lastOperandEquals(prev)){newExp=prev.currNumber;}else{newExp=prev.expression;}if([\"+\",\"-\",\"*\",\"/\"].includes(prev.prevNumber)){var isOperands=function isOperands(el){return[\"+\",\"-\",\"*\",\"/\"].includes(el);};var operandsAlone=prev.expression.replace(/\\s/g,\"\").slice(-2).split(\"\");if(operandsAlone.every(isOperands)){console.log(\"operandsAlone is True\",operandsAlone);var newOperand=prev.expression.trim().split(\"\").filter(function(el){return![\"+\",\"-\",\"*\",\"/\"].includes(el)&&/\\S/.test(el);});console.log(\"newOperans\",newOperand);newExp=newOperand.join(\"\");console.log(\"newOperans\",newExp);}operands=operands+prev.prevNumber;console.log(\"operands\",operands);}else{operands=btnValue;}var expression=\"\";expression=prev.expression.length===0?\"\".concat(state.currNumber,\" \").concat(btnValue):\"\".concat(newExp,\" \").concat(state.currNumber,\" \").concat(btnValue);return _objectSpread(_objectSpread({},prev),{},{currNumber:\"\",expression:expression,prevNumber:operands});});}// OUTPUT WHEN EQUALS\nif(btnValue===\"=\"){var newExp=\"\".concat(state.expression,\" \").concat(state.currNumber);var calc=eval(newExp).toFixed(4);setstate(function(prev){return _objectSpread(_objectSpread({},prev),{},{expression:newExp+btnValue,currNumber:+calc,isComplete:true});});}console.log(\"state\",state);};var lastOperandEquals=function lastOperandEquals(obj){return obj.isComplete&&obj.expression.slice(-1)===\"=\";};return/*#__PURE__*/_jsxs(\"div\",{className:\"section-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"expression\",children:state.expression}),/*#__PURE__*/_jsx(\"div\",{className:\"displayCalc\",id:\"display\",children:state.currNumber}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:numbers.map(function(item,index){return/*#__PURE__*/_jsx(Buttons,{item:item,handleClick:handleClick},index);})})]});}export default App;","map":{"version":3,"sources":["E:/GIT/Projects/Calculator/src/App.js"],"names":["React","useState","Buttons","App","initialState","prevNumber","currNumber","operations","isComplete","expression","state","setstate","numbers","id","value","handleClick","e","btnValue","target","dataset","newNumber","prevState","isNaN","Number","newExp","lastOperandEquals","length","split","includes","prev","operands","isOperands","el","operandsAlone","replace","slice","every","console","log","newOperand","trim","filter","test","join","calc","eval","toFixed","obj","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./Buttons\";\n\nfunction App() {\n  const initialState = {\n    prevNumber: \"\",\n    currNumber: \"0\",\n    operations: \"\",\n    isComplete: false,\n    expression: \"\",\n  };\n  const [state, setstate] = useState(initialState);\n\n  const numbers = [\n    { id: \"seven\", value: 7 },\n    { id: \"eight\", value: 8 },\n    { id: \"nine\", value: 9 },\n    { id: \"delete\", value: \"DEL\" },\n    { id: \"four\", value: 4 },\n    { id: \"five\", value: 5 },\n    { id: \"six\", value: 6 },\n    { id: \"add\", value: \"+\" },\n    { id: \"one\", value: 1 },\n    { id: \"two\", value: 2 },\n    { id: \"three\", value: 3 },\n    { id: \"subtract\", value: \"-\" },\n    { id: \"zero\", value: 0 },\n    { id: \"decimal\", value: \".\" },\n    { id: \"divide\", value: \"/\" },\n    { id: \"multiply\", value: \"*\" },\n    { id: \"equals\", value: \"=\" },\n    { id: \"clear\", value: \"AC\" },\n  ];\n\n  const handleClick = (e) => {\n    const btnValue = e.target.dataset.value;\n    let newNumber = \"\";\n\n    if (state.isComplete) {\n      setstate((prevState) => {\n        return { ...prevState, currNumber: \"\" };\n      });\n    }\n\n    if (!isNaN(Number(btnValue))) {\n      setstate((prevState) => {\n        let newExp = \"\";\n        \n        // Checking the Last operations is EQUALS\n        if (lastOperandEquals(prevState)) {\n          newExp = \"\";\n        } else {\n          newExp = prevState.expression;\n        }\n\n        if (\n          prevState.currNumber.length === 1 &&\n          prevState.currNumber[0] === \"0\"\n        ) {\n          newNumber = btnValue;\n        } else {\n          newNumber = prevState.currNumber + btnValue;\n        }\n\n        return {\n          ...prevState,\n          currNumber: newNumber,\n          prevNumber: btnValue,\n          isComplete: false,\n          expression: newExp,\n        };\n      });\n    }\n\n    if (btnValue === \".\" && !state.currNumber.split(\"\").includes(btnValue)) {\n      setstate((prevState) => {\n        return {\n          ...prevState,\n          currNumber: prevState.currNumber + btnValue,\n        };\n      });\n    }\n    if (btnValue === \"AC\") {\n      setstate((prevState) => {\n        return {\n          ...prevState,\n          currNumber: \"0\",\n          prevNumber: \"\",\n          isComplete: true,\n          expression: \"\",\n        };\n      });\n    }\n\n    // OPERATIONS\n    if ([\"+\", \"-\", \"*\", \"/\"].includes(btnValue)) {\n      setstate((prev) => {\n        let newExp = \"\";\n        let operands = \"\";\n\n        if (lastOperandEquals(prev)) {\n          newExp = prev.currNumber;\n        } else {\n          newExp = prev.expression;\n        }\n\n        if ([\"+\", \"-\", \"*\", \"/\"].includes(prev.prevNumber)) {\n          const isOperands = (el) => [\"+\", \"-\", \"*\", \"/\"].includes(el);\n\n          let operandsAlone = prev.expression\n            .replace(/\\s/g, \"\")\n            .slice(-2)\n            .split(\"\");\n\n          if (operandsAlone.every(isOperands)) {\n            console.log(`operandsAlone is True`, operandsAlone);\n\n            let newOperand = prev.expression\n              .trim()\n              .split(\"\")\n              .filter((el) => {\n                return ![\"+\", \"-\", \"*\", \"/\"].includes(el) && /\\S/.test(el);\n              });\n            console.log(`newOperans`, newOperand);\n            newExp = newOperand.join(\"\");\n\n            console.log(`newOperans`, newExp);\n          }\n\n          operands = operands + prev.prevNumber;\n          console.log(`operands`, operands);\n        } else {\n          operands = btnValue;\n        }\n\n        let expression = \"\";\n\n        expression =\n          prev.expression.length === 0\n            ? `${state.currNumber} ${btnValue}`\n            : `${newExp} ${state.currNumber} ${btnValue}`;\n\n        return {\n          ...prev,\n          currNumber: \"\",\n          expression: expression,\n          prevNumber: operands,\n        };\n      });\n    }\n\n    // OUTPUT WHEN EQUALS\n    if (btnValue === \"=\") {\n      let newExp = `${state.expression} ${state.currNumber}`;\n      let calc = eval(newExp).toFixed(4);\n\n      setstate((prev) => {\n        return {\n          ...prev,\n          expression: newExp + btnValue,\n          currNumber: +calc,\n          isComplete: true,\n        };\n      });\n    }\n    console.log(`state`, state);\n  };\n\n  const lastOperandEquals = (obj) =>\n    obj.isComplete && obj.expression.slice(-1) === \"=\";\n\n  return (\n    <div className=\"section-center\">\n      <div className=\"expression\">{state.expression}</div>\n      <div className=\"displayCalc\" id=\"display\">\n        {state.currNumber}\n      </div>\n      <div className=\"container\">\n        {numbers.map((item, index) => {\n          return <Buttons key={index} item={item} handleClick={handleClick} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}